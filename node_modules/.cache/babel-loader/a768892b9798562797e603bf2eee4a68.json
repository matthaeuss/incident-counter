{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport { fetchReducer } from \"../fetchReducer\";\nimport { ERROR, FETCHING, RESPONSE_COMPLETE } from \"../actionTypes\";\nimport { endpoint } from \"../endpoint\";\nimport useThunkReducer from \"./useThunkReducer\";\n\nconst fetchCharacters = dispatch => {\n  console.log('Fetching');\n  dispatch({\n    type: FETCHING\n  });\n  fetch(endpoint + '/characters').then(response => response.json()).then(data => {\n    dispatch({\n      type: RESPONSE_COMPLETE,\n      payload: {\n        result: data.characters\n      }\n    });\n  }).catch(error => {\n    dispatch({\n      type: ERROR,\n      payload: {\n        error\n      }\n    });\n  });\n};\n\nconst useFetch = function (url) {\n  _s();\n\n  let formatData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data => data;\n  const [state, dispatch] = useThunkReducer(fetchReducer, []);\n  useEffect(() => {// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, formatData]);\n  const {\n    result,\n    loading,\n    error\n  } = state;\n  return [result, loading, error];\n};\n\n_s(useFetch, \"i24esSw6fb9rDV6ybneUtY8Vn3M=\", false, function () {\n  return [useThunkReducer];\n});\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useReducer","useState","fetchReducer","ERROR","FETCHING","RESPONSE_COMPLETE","endpoint","useThunkReducer","fetchCharacters","dispatch","console","log","type","fetch","then","response","json","data","payload","result","characters","catch","error","useFetch","url","formatData","state","loading"],"sources":["/home/matt/Dokumenty/repositories/star-wars/src/hooks/useFetch.js"],"sourcesContent":["import {useEffect, useReducer, useState} from \"react\";\nimport {fetchReducer} from \"../fetchReducer\";\nimport {ERROR, FETCHING, RESPONSE_COMPLETE} from \"../actionTypes\";\nimport {endpoint} from \"../endpoint\";\nimport useThunkReducer from \"./useThunkReducer\";\n\n\nconst fetchCharacters =  (dispatch) => {\n    console.log('Fetching');\n\n    dispatch({type: FETCHING});\n\n\n    fetch(endpoint + '/characters')\n        .then((response) => response.json())\n        .then((data) => {\n            dispatch({\n                type: RESPONSE_COMPLETE,\n                payload: {\n                    result: data.characters\n                }\n            })\n        })\n        .catch((error) => {\n            dispatch({\n                type: ERROR,\n                payload: {error}\n            })\n        })\n}\n\n\nconst useFetch = (url, formatData = (data) => data) => {\n    const [state, dispatch] = useThunkReducer(fetchReducer, []);\n    \n\n\n\n\n    useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [url, formatData])\n\n    const {result, loading, error} = state\n    return[result, loading, error]\n}\n\nexport default useFetch;"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,iBAAzB,QAAiD,gBAAjD;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,eAAe,GAAKC,QAAD,IAAc;EACnCC,OAAO,CAACC,GAAR,CAAY,UAAZ;EAEAF,QAAQ,CAAC;IAACG,IAAI,EAAER;EAAP,CAAD,CAAR;EAGAS,KAAK,CAACP,QAAQ,GAAG,aAAZ,CAAL,CACKQ,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAU;IACZR,QAAQ,CAAC;MACLG,IAAI,EAAEP,iBADD;MAELa,OAAO,EAAE;QACLC,MAAM,EAAEF,IAAI,CAACG;MADR;IAFJ,CAAD,CAAR;EAMH,CATL,EAUKC,KAVL,CAUYC,KAAD,IAAW;IACdb,QAAQ,CAAC;MACLG,IAAI,EAAET,KADD;MAELe,OAAO,EAAE;QAACI;MAAD;IAFJ,CAAD,CAAR;EAIH,CAfL;AAgBH,CAtBD;;AAyBA,MAAMC,QAAQ,GAAG,UAACC,GAAD,EAAsC;EAAA;;EAAA,IAAhCC,UAAgC,uEAAlBR,IAAD,IAAUA,IAAS;EACnD,MAAM,CAACS,KAAD,EAAQjB,QAAR,IAAoBF,eAAe,CAACL,YAAD,EAAe,EAAf,CAAzC;EAMAH,SAAS,CAAC,MAAM,CAChB;EACC,CAFQ,EAEN,CAACyB,GAAD,EAAMC,UAAN,CAFM,CAAT;EAIA,MAAM;IAACN,MAAD;IAASQ,OAAT;IAAkBL;EAAlB,IAA2BI,KAAjC;EACA,OAAM,CAACP,MAAD,EAASQ,OAAT,EAAkBL,KAAlB,CAAN;AACH,CAbD;;GAAMC,Q;UACwBhB,e;;;AAc9B,eAAegB,QAAf"},"metadata":{},"sourceType":"module"}