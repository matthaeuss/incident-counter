{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport { fetchReducer } from \"../fetchReducer\";\nimport { FETCHING } from \"../actionTypes\";\n\nconst useFetch = function (url) {\n  _s();\n\n  let formatData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data => data;\n  const [state, dispatch] = useReducer(fetchReducer, []); // const[response, setResponse] = useState(null);\n  // const[loading, setLoading] = useState(true);\n  // const[error, setError] = useState(null)\n\n  const doRequest = async () => {\n    console.log('Fetching');\n    dispatch({\n      type: FETCHING\n    });\n    const responseData = await fetch(url);\n    const data = await responseData.json();\n    setResponse(formatData(data));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    doRequest().catch(error => {\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, formatData]);\n  return [response, loading, error];\n};\n\n_s(useFetch, \"8u/JqpRC/mF6XFjbMf7O0gRQXow=\");\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useReducer","useState","fetchReducer","FETCHING","useFetch","url","formatData","data","state","dispatch","doRequest","console","log","type","responseData","fetch","json","setResponse","setLoading","catch","error","setError","finally","response","loading"],"sources":["/home/matt/Dokumenty/repositories/star-wars/src/hooks/useFetch.js"],"sourcesContent":["import {useEffect, useReducer, useState} from \"react\";\nimport {fetchReducer} from \"../fetchReducer\";\nimport {FETCHING} from \"../actionTypes\";\n\nconst useFetch = (url, formatData = (data) => data) => {\n    const [state, dispatch] = useReducer(fetchReducer, []);\n\n\n\n    // const[response, setResponse] = useState(null);\n    // const[loading, setLoading] = useState(true);\n    // const[error, setError] = useState(null)\n\n    const doRequest = async () => {\n        console.log('Fetching');\n\n        dispatch({type: FETCHING});\n\n\n        const responseData = await fetch(url)\n        const data = await responseData.json()\n        setResponse(formatData(data));\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        doRequest()\n            .catch((error) => {\n                setError(error);\n            }).finally(() => {\n                setLoading(false);\n            })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [url, formatData])\n\n    return[response, loading, error]\n}\n\nexport default useFetch;"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;;AAEA,MAAMC,QAAQ,GAAG,UAACC,GAAD,EAAsC;EAAA;;EAAA,IAAhCC,UAAgC,uEAAlBC,IAAD,IAAUA,IAAS;EACnD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACE,YAAD,EAAe,EAAf,CAApC,CADmD,CAKnD;EACA;EACA;;EAEA,MAAMQ,SAAS,GAAG,YAAY;IAC1BC,OAAO,CAACC,GAAR,CAAY,UAAZ;IAEAH,QAAQ,CAAC;MAACI,IAAI,EAAEV;IAAP,CAAD,CAAR;IAGA,MAAMW,YAAY,GAAG,MAAMC,KAAK,CAACV,GAAD,CAAhC;IACA,MAAME,IAAI,GAAG,MAAMO,YAAY,CAACE,IAAb,EAAnB;IACAC,WAAW,CAACX,UAAU,CAACC,IAAD,CAAX,CAAX;IACAW,UAAU,CAAC,KAAD,CAAV;EACH,CAVD;;EAYAnB,SAAS,CAAC,MAAM;IACZW,SAAS,GACJS,KADL,CACYC,KAAD,IAAW;MACdC,QAAQ,CAACD,KAAD,CAAR;IACH,CAHL,EAGOE,OAHP,CAGe,MAAM;MACbJ,UAAU,CAAC,KAAD,CAAV;IACH,CALL,EADY,CAOhB;EACC,CARQ,EAQN,CAACb,GAAD,EAAMC,UAAN,CARM,CAAT;EAUA,OAAM,CAACiB,QAAD,EAAWC,OAAX,EAAoBJ,KAApB,CAAN;AACH,CAhCD;;GAAMhB,Q;;AAkCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}