{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport { fetchReducer } from \"../fetchReducer\";\nimport { ERROR, FETCHING, RESPONSE_COMPLETE } from \"../actionTypes\";\n\nconst useFetch = function (url) {\n  _s();\n\n  let formatData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data => data;\n  const [state, dispatch] = useReducer(fetchReducer, []);\n\n  const doRequest = async () => {\n    console.log('Fetching');\n    dispatch({\n      type: FETCHING\n    });\n    const responseData = await fetch(url);\n    const data = await responseData.json();\n    dispatch({\n      type: RESPONSE_COMPLETE,\n      payload: {\n        result: formatData(data)\n      }\n    });\n  };\n\n  useEffect(() => {\n    doRequest().catch(error => {\n      dispatch({\n        type: ERROR,\n        payload: {\n          error\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, formatData]);\n  const {\n    result,\n    loading,\n    error\n  } = state;\n  return [result, loading, error];\n};\n\n_s(useFetch, \"8u/JqpRC/mF6XFjbMf7O0gRQXow=\");\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useReducer","useState","fetchReducer","ERROR","FETCHING","RESPONSE_COMPLETE","useFetch","url","formatData","data","state","dispatch","doRequest","console","log","type","responseData","fetch","json","payload","result","catch","error","loading"],"sources":["/home/matt/Dokumenty/repositories/star-wars/src/hooks/useFetch.js"],"sourcesContent":["import {useEffect, useReducer, useState} from \"react\";\nimport {fetchReducer} from \"../fetchReducer\";\nimport {ERROR, FETCHING, RESPONSE_COMPLETE} from \"../actionTypes\";\n\nconst useFetch = (url, formatData = (data) => data) => {\n    const [state, dispatch] = useReducer(fetchReducer, []);\n\n    const doRequest = async () => {\n        console.log('Fetching');\n\n        dispatch({type: FETCHING});\n\n\n        const responseData = await fetch(url)\n        const data = await responseData.json()\n        dispatch({\n            type: RESPONSE_COMPLETE,\n            payload: {\n                result: formatData(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        doRequest()\n            .catch((error) => {\n                dispatch({\n                    type: ERROR,\n                    payload: {error}\n                })\n            })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [url, formatData])\n\n    const {result, loading, error} = state\n    return[result, loading, error]\n}\n\nexport default useFetch;"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,iBAAzB,QAAiD,gBAAjD;;AAEA,MAAMC,QAAQ,GAAG,UAACC,GAAD,EAAsC;EAAA;;EAAA,IAAhCC,UAAgC,uEAAlBC,IAAD,IAAUA,IAAS;EACnD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACE,YAAD,EAAe,EAAf,CAApC;;EAEA,MAAMU,SAAS,GAAG,YAAY;IAC1BC,OAAO,CAACC,GAAR,CAAY,UAAZ;IAEAH,QAAQ,CAAC;MAACI,IAAI,EAAEX;IAAP,CAAD,CAAR;IAGA,MAAMY,YAAY,GAAG,MAAMC,KAAK,CAACV,GAAD,CAAhC;IACA,MAAME,IAAI,GAAG,MAAMO,YAAY,CAACE,IAAb,EAAnB;IACAP,QAAQ,CAAC;MACLI,IAAI,EAAEV,iBADD;MAELc,OAAO,EAAE;QACLC,MAAM,EAAEZ,UAAU,CAACC,IAAD;MADb;IAFJ,CAAD,CAAR;EAMH,CAdD;;EAgBAV,SAAS,CAAC,MAAM;IACZa,SAAS,GACJS,KADL,CACYC,KAAD,IAAW;MACdX,QAAQ,CAAC;QACLI,IAAI,EAAEZ,KADD;QAELgB,OAAO,EAAE;UAACG;QAAD;MAFJ,CAAD,CAAR;IAIH,CANL,EADY,CAQhB;EACC,CATQ,EASN,CAACf,GAAD,EAAMC,UAAN,CATM,CAAT;EAWA,MAAM;IAACY,MAAD;IAASG,OAAT;IAAkBD;EAAlB,IAA2BZ,KAAjC;EACA,OAAM,CAACU,MAAD,EAASG,OAAT,EAAkBD,KAAlB,CAAN;AACH,CAhCD;;GAAMhB,Q;;AAkCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}