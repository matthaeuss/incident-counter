{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport { fetchReducer } from \"../fetchReducer\";\nimport { ERROR, FETCHING, RESPONSE_COMPLETE } from \"../actionTypes\";\n\nconst doRequest = async () => {\n  console.log('Fetching');\n  dispatch({\n    type: FETCHING\n  });\n  const responseData = await fetch(url);\n  const data = await responseData.json();\n  dispatch({\n    type: RESPONSE_COMPLETE,\n    payload: {\n      result: formatData(data)\n    }\n  });\n};\n\nconst useFetch = function (url) {\n  _s();\n\n  let formatData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data => data;\n  const [state, dispatch] = useReducer(fetchReducer, []);\n  useEffect(() => {\n    doRequest().catch(error => {\n      dispatch({\n        type: ERROR,\n        payload: {\n          error\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, formatData]);\n  const {\n    result,\n    loading,\n    error\n  } = state;\n  return [result, loading, error];\n};\n\n_s(useFetch, \"8u/JqpRC/mF6XFjbMf7O0gRQXow=\");\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useReducer","useState","fetchReducer","ERROR","FETCHING","RESPONSE_COMPLETE","doRequest","console","log","dispatch","type","responseData","fetch","url","data","json","payload","result","formatData","useFetch","state","catch","error","loading"],"sources":["/home/matt/Dokumenty/repositories/star-wars/src/hooks/useFetch.js"],"sourcesContent":["import {useEffect, useReducer, useState} from \"react\";\nimport {fetchReducer} from \"../fetchReducer\";\nimport {ERROR, FETCHING, RESPONSE_COMPLETE} from \"../actionTypes\";\n\n\nconst doRequest = async () => {\n    console.log('Fetching');\n\n    dispatch({type: FETCHING});\n\n\n    const responseData = await fetch(url)\n    const data = await responseData.json()\n    dispatch({\n        type: RESPONSE_COMPLETE,\n        payload: {\n            result: formatData(data)\n        }\n    })\n}\n\n\nconst useFetch = (url, formatData = (data) => data) => {\n    const [state, dispatch] = useReducer(fetchReducer, []);\n\n\n\n    useEffect(() => {\n        doRequest()\n            .catch((error) => {\n                dispatch({\n                    type: ERROR,\n                    payload: {error}\n                })\n            })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [url, formatData])\n\n    const {result, loading, error} = state\n    return[result, loading, error]\n}\n\nexport default useFetch;"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,iBAAzB,QAAiD,gBAAjD;;AAGA,MAAMC,SAAS,GAAG,YAAY;EAC1BC,OAAO,CAACC,GAAR,CAAY,UAAZ;EAEAC,QAAQ,CAAC;IAACC,IAAI,EAAEN;EAAP,CAAD,CAAR;EAGA,MAAMO,YAAY,GAAG,MAAMC,KAAK,CAACC,GAAD,CAAhC;EACA,MAAMC,IAAI,GAAG,MAAMH,YAAY,CAACI,IAAb,EAAnB;EACAN,QAAQ,CAAC;IACLC,IAAI,EAAEL,iBADD;IAELW,OAAO,EAAE;MACLC,MAAM,EAAEC,UAAU,CAACJ,IAAD;IADb;EAFJ,CAAD,CAAR;AAMH,CAdD;;AAiBA,MAAMK,QAAQ,GAAG,UAACN,GAAD,EAAsC;EAAA;;EAAA,IAAhCK,UAAgC,uEAAlBJ,IAAD,IAAUA,IAAS;EACnD,MAAM,CAACM,KAAD,EAAQX,QAAR,IAAoBT,UAAU,CAACE,YAAD,EAAe,EAAf,CAApC;EAIAH,SAAS,CAAC,MAAM;IACZO,SAAS,GACJe,KADL,CACYC,KAAD,IAAW;MACdb,QAAQ,CAAC;QACLC,IAAI,EAAEP,KADD;QAELa,OAAO,EAAE;UAACM;QAAD;MAFJ,CAAD,CAAR;IAIH,CANL,EADY,CAQhB;EACC,CATQ,EASN,CAACT,GAAD,EAAMK,UAAN,CATM,CAAT;EAWA,MAAM;IAACD,MAAD;IAASM,OAAT;IAAkBD;EAAlB,IAA2BF,KAAjC;EACA,OAAM,CAACH,MAAD,EAASM,OAAT,EAAkBD,KAAlB,CAAN;AACH,CAlBD;;GAAMH,Q;;AAoBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}